{"version":3,"sources":["redux/actions/LoadWeatherAction.js","api/Api.js","components/NavMenu.jsx","api/CityInfo.js","helpers/weatherImage.js","components/ForecastCity.jsx","helpers/humanTime.js","components/SingleCity.jsx","components/MyCity.jsx","pages/CitiesContainer.jsx","App.js","redux/reducers/LoadWeatherReducer.js","redux/store.js","index.js"],"names":["actionTypes","addToFavorite","city","type","payload","this","myValue","serverApi","client","axios","create","baseURL","params","APPID","NavMenu","memo","useState","searchCity","setSearchCity","dispatch","useDispatch","search","useCallback","e","target","value","searchNewCity","name","preventDefault","a","Api","get","then","data","searchedCity","catch","message","error","Navbar","bg","variant","Brand","Form","inline","onSubmit","FormControl","placeholder","className","onChange","Button","getWeatherImage","ForecastCity","settings","useMemo","dots","infinite","speed","slidesToShow","slidesToScroll","forecast5city","useSelector","state","list","map","Date","dt","toLocaleString","replace","main","temp","toFixed","src","weather","icon","alt","description","getHumanTime","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","SingleCity","props","removeFromFavorite","sys","wind","coord","id","country","sunrise","sunset","dateSunRise","dateSunSet","todayIs","toLocaleDateString","sunRise","sunSet","removeFavorite","addFavorite","Object","keys","length","style","textAlign","Table","striped","bordered","hover","humidity","deg","lat","lon","to","onClick","Spinner","animation","MyCity","myCity","defaultCity","cities","canRemove","findIndex","el","getDirection","direction","CitiesContainer","lng","setLng","setLat","setDefaultCity","isAdded","setIsAdded","isRequestInProgress","displayLocationInfo","position","coords","longitude","latitude","useEffect","navigator","geolocation","getCurrentPosition","console","log","getDefaultCity","Container","fluid","Row","Alert","Col","arr","index","setTimeout","md","App","defaultState","LoadWeatherReducer","filter","c","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","persistedReducer","persistReducer","citiesState","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d66d921c.chunk.js","sourcesContent":["export const actionTypes = {\n  GET_DEFAULT_CITY_COORDS_REQ_START: 'GET_DEFAULT_CITY_COORDS_REQ_START',\n  GET_DEFAULT_CITY_COORDS_REQ_SUCCESS: 'GET_DEFAULT_CITY_COORDS_REQ_SUCCESS',\n  GET_DEFAULT_CITY_COORDS_REQ_ERROR: 'GET_DEFAULT_CITY_COORDS_REQ_ERROR',\n  SEARCH_CITY_REQ_START: 'SEARCH_CITY_REQ_START',\n  SEARCH_CITY_REQ_SUCCESS: 'SEARCH_CITY_REQ_SUCCESS',\n  SEARCH_CITY_REQ_ERROR: 'SEARCH_CITY_REQ_ERROR',\n  ADD_TO_FAVORITE: 'ADD_TO_FAVORITE',\n  REMOVE_FROM_FAVORITE: 'REMOVE_FROM_FAVORITE',\n  FORECAST_FIVEDAYS_REQ_START: 'FORECAST_FIVEDAYS_REQ_START',\n  FORECAST_FIVEDAYS_REQ_SUCCESS: 'FORECAST_FIVEDAYS_REQ_SUCCESS',\n  FORECAST_FIVEDAYS_REQ_ERROR: 'FORECAST_FIVEDAYS_REQ_ERROR',\n};\n\nexport const requestDefaultCity = () => ({\n  type: actionTypes.GET_DEFAULT_CITY_COORDS_REQ_START,\n});\n\nexport const requestDefaultCitySuccess = (defaultCity) => ({\n  type: actionTypes.GET_DEFAULT_CITY_COORDS_REQ_SUCCESS,\n  payload: {\n    defaultCity,\n  },\n});\nexport const requestDefaultCityError = (error) => ({\n  type: actionTypes.GET_DEFAULT_CITY_COORDS_REQ_ERROR,\n  payload: {\n    error,\n  },\n});\nexport const requestSearchCity = () => ({\n  type: actionTypes.SEARCH_CITY_REQ_START,\n});\n\nexport const requestSearchCitySuccess = (searchedCity) => ({\n  type: actionTypes.SEARCH_CITY_REQ_SUCCESS,\n  payload: {\n    searchedCity,\n  },\n});\nexport const requestSearchCityError = (error) => ({\n  type: actionTypes.SEARCH_CITY_REQ_ERROR,\n  payload: {\n    error,\n  },\n});\nexport const addToFavorite = (city) => ({\n  type: actionTypes.ADD_TO_FAVORITE,\n  payload: {\n    city,\n  },\n});\nexport const removeFromFavorite = (city) => ({\n  type: actionTypes.REMOVE_FROM_FAVORITE,\n  payload: {\n    city,\n  },\n});\nexport const requestForecast5City = () => ({\n  type: actionTypes.FORECAST_FIVEDAYS_REQ_START,\n});\n\nexport const requestForecast5CitySuccess = (forecast5city) => ({\n  type: actionTypes.FORECAST_FIVEDAYS_REQ_SUCCESS,\n  payload: {\n    forecast5city,\n  },\n});\nexport const requestForecast5CityError = (error) => ({\n  type: actionTypes.FORECAST_FIVEDAYS_REQ_ERROR,\n  payload: {\n    error,\n  },\n});\n","import axios from 'axios';\n\nclass Api {\n  constructor() {\n    this.myValue = '3476f426c6d8f97027e143c1f5b3b21e';\n    this.serverApi = 'https://api.openweathermap.org/data/2.5';\n    this.client = axios.create({\n      baseURL: this.serverApi,\n      params: { APPID: this.myValue },\n    });\n  }\n}\n\nexport default new Api();\n","import React, { memo, useCallback, useState } from 'react';\nimport { Button, Form, FormControl, Navbar } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { getSearchedCity } from 'api/CityInfo';\n\nconst NavMenu = memo(() => {\n  const [searchCity, setSearchCity] = useState('');\n  const dispatch = useDispatch();\n\n  const search = useCallback((e) => setSearchCity(e.target.value), []);\n\n  const searchNewCity = useCallback(\n    (e) => {\n      e.preventDefault();\n      dispatch(getSearchedCity(searchCity));\n      setSearchCity('');\n    },\n    [dispatch, searchCity]\n  );\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>My weather app</Navbar.Brand>\n      <Form inline onSubmit={searchNewCity}>\n        <FormControl\n          type=\"text\"\n          placeholder=\"Search city by name\"\n          className=\"mr-sm-2\"\n          onChange={search}\n          value={searchCity}\n        />\n        <Button type=\"submit\" variant=\"success\">\n          Search\n        </Button>\n      </Form>\n    </Navbar>\n  );\n});\n\nexport default NavMenu;\n","import {\n  requestDefaultCity,\n  requestDefaultCityError,\n  requestDefaultCitySuccess,\n  requestForecast5City,\n  requestForecast5CityError,\n  requestForecast5CitySuccess,\n  requestSearchCity,\n  requestSearchCityError,\n  requestSearchCitySuccess,\n} from 'redux/actions/LoadWeatherAction';\nimport Api from './Api';\n\nexport const getDefaultCity = (lat, lng) => async (dispatch) => {\n  dispatch(requestDefaultCity());\n  await Api.client\n    .get(`/weather?lat=${lat}&lon=${lng}`)\n    .then(({ data }) => {\n      dispatch(requestDefaultCitySuccess(data));\n    })\n    .catch(({ message }) => {\n      dispatch(requestDefaultCityError(message));\n      console.log(message);\n    });\n};\n\nexport const getSearchedCity = (name) => async (dispatch) => {\n  dispatch(requestSearchCity());\n  await Api.client\n    .get(`/weather?q=${name}`)\n    .then(({ data }) => {\n      dispatch(requestSearchCitySuccess(data));\n    })\n    .catch(({ message }) => dispatch(requestSearchCityError(message)));\n};\n\nexport const getForecastCity = (id) => async (dispatch) => {\n  if (!id) return;\n  dispatch(requestForecast5City());\n  await Api.client\n    .get(`/forecast?id=${id}`)\n    .then(({ data }) => {\n      dispatch(requestForecast5CitySuccess(data));\n    })\n    .catch(({ message }) => dispatch(requestForecast5CityError(message)));\n};\n","const getWeatherImage = (name) => `https://openweathermap.org/img/w/${name}.png`;\n\nexport default getWeatherImage;\n","import React, { memo, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Slider from 'react-slick';\nimport getWeatherImage from 'helpers/weatherImage';\n\nconst ForecastCity = memo(() => {\n  const settings = useMemo(\n    () => ({\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 6,\n      slidesToScroll: 5,\n    }),\n    []\n  );\n\n  const forecast5city = useSelector((state) => state.forecast5city);\n\n  if (!forecast5city) return null;\n\n  return (\n    <div>\n      <h2>Forecast for 5 day for city {forecast5city.city.name}</h2>\n      <Slider {...settings} className=\"forecast\">\n        {forecast5city.list.map((city) => (\n          <div key={city.dt} className=\"forecast__item\">\n            <h4>{new Date(city.dt * 1000).toLocaleString().replace(/:[^:]*$/, '')}</h4>\n            <h5>{(city.main.temp - 273.15).toFixed(0)}&#8451;</h5>\n            <img src={getWeatherImage(city.weather[0].icon)} alt=\"weather\" />\n            <p>{city.weather[0].description}</p>\n          </div>\n        ))}\n      </Slider>\n    </div>\n  );\n});\n\nexport default ForecastCity;\n","const getHumanTime = (date) => {\n  const hours = date.getHours();\n  const minutes = '0' + date.getMinutes();\n  const seconds = '0' + date.getSeconds();\n  return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n};\n\nexport default getHumanTime;\n","import React, { Fragment, memo, useCallback, useMemo } from 'react';\nimport { Button, Spinner, Table } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport getWeatherImage from 'helpers/weatherImage';\nimport getHumanTime from 'helpers/humanTime';\n\nconst SingleCity = memo((props) => {\n  const { city, addToFavorite, removeFromFavorite } = props;\n\n  const dispatch = useDispatch();\n\n  const { sys, main, wind, coord, id, weather, name } = city;\n  const { country, sunrise, sunset } = sys;\n\n  const dateSunRise = useMemo(() => new Date(sunrise * 1000), [sunrise]);\n  const dateSunSet = useMemo(() => new Date(sunset * 1000), [sunset]);\n  const todayIs = useMemo(() => new Date().toLocaleDateString(), []);\n\n  const sunRise = useMemo(() => getHumanTime(dateSunRise), [dateSunRise]);\n  const sunSet = useMemo(() => getHumanTime(dateSunSet), [dateSunSet]);\n\n  const removeFavorite = useCallback(() => dispatch(removeFromFavorite(city)), [dispatch, city, removeFromFavorite]);\n\n  const addFavorite = useCallback(() => addToFavorite(city), [city, addToFavorite]);\n\n  if (city && Object.keys(city).length) {\n    return (\n      <div className=\"single\">\n        <h2>{name}</h2>\n        <img src={getWeatherImage(weather[0].icon)} alt=\"weather\" />\n        <p style={{ textAlign: 'center' }}>{weather[0].description}</p>\n        <Table striped bordered hover>\n          <tbody>\n            <tr>\n              <td>t&deg; </td>\n              <td>{(main.temp - 273.15).toFixed(0)}&#8451;</td>\n            </tr>\n            <tr>\n              <td>Country:</td>\n              <td>{country}</td>\n            </tr>\n            <tr>\n              <td>Today is:</td>\n              <td>{todayIs}</td>\n            </tr>\n            <tr>\n              <td>Sunrise:</td>\n              <td>{sunRise}</td>\n            </tr>\n            <tr>\n              <td>Sunset:</td>\n              <td>{sunSet}</td>\n            </tr>\n            <tr>\n              <td>Humidity:</td>\n              <td>{main.humidity}%</td>\n            </tr>\n            <tr>\n              <td>Wind:</td>\n              <td>\n                {wind.deg ? (\n                  <Fragment>\n                    direction:&nbsp;\n                    {wind.deg < 90 ? <span>North-East</span> : null}\n                    {wind.deg >= 90 && wind.deg < 180 ? <span>South-East</span> : null}\n                    {wind.deg >= 180 && wind.deg < 270 ? <span>South-West</span> : null}\n                    {wind.deg >= 270 && wind.deg < 360 ? <span>North-West</span> : null}, <br />\n                  </Fragment>\n                ) : null}\n                speed: {wind.speed} m/s\n              </td>\n            </tr>\n            <tr>\n              <td>Coordinates:</td>\n              <td>\n                {coord.lat} {coord.lon}\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <Link to={`${id}`}>\n          <Button variant=\"dark\">Forecast for 5 days</Button>\n        </Link>\n        {addToFavorite && <Button onClick={addFavorite}>Add to favorite</Button>}\n        {removeFromFavorite && (\n          <Button variant=\"danger\" onClick={removeFavorite}>\n            Remove from favorite\n          </Button>\n        )}\n      </div>\n    );\n  }\n  return <Spinner animation=\"grow\" />;\n});\n\nexport default SingleCity;\n","import React, { memo, useCallback, useMemo } from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport getWeatherImage from 'helpers/weatherImage';\nimport getHumanTime from 'helpers/humanTime';\nimport { addToFavorite, removeFromFavorite } from 'redux/actions/LoadWeatherAction';\n\nconst MyCity = memo(() => {\n  const dispatch = useDispatch();\n\n  const myCity = useSelector((state) => state.defaultCity);\n  const cities = useSelector((state) => state.cities);\n\n  const { sys, main, wind, coord, weather, name, id } = myCity;\n  const { country, sunrise, sunset } = sys;\n\n  const dateSunRise = useMemo(() => new Date(sunrise * 1000), [sunrise]);\n  const dateSunSet = useMemo(() => new Date(sunset * 1000), [sunset]);\n  const todayIs = useMemo(() => new Date().toLocaleDateString(), []);\n\n  const sunRise = useMemo(() => getHumanTime(dateSunRise), [dateSunRise]);\n  const sunSet = useMemo(() => getHumanTime(dateSunSet), [dateSunSet]);\n\n  const removeFavorite = useCallback(() => dispatch(removeFromFavorite(myCity)), [dispatch, myCity]);\n\n  const canRemove = useMemo(() => cities.findIndex((el) => el.id === id) > 0, [cities, id]);\n\n  const addFavorite = useCallback(() => {\n    if (cities.findIndex((el) => el.id === id) > 0) return;\n    dispatch(addToFavorite(myCity));\n  }, [cities, dispatch, myCity, id]);\n\n  const getDirection = useCallback((direction) => {\n    switch (true) {\n      case direction < 90:\n        return 'North-East';\n      case direction >= 90 && direction < 180:\n        return 'South-East';\n      case direction >= 180 && direction < 270:\n        return 'South-West';\n      case direction >= 270 && direction < 360:\n        return 'North-West';\n      default:\n        return 'Checking';\n    }\n  }, []);\n\n  if (myCity) {\n    return (\n      <div className=\"my-city\">\n        <h2>Weather in your city: {name}</h2>\n        <img src={getWeatherImage(weather[0].icon)} alt=\"weather\" />\n        <p style={{ textAlign: 'center' }}>{weather[0].description}</p>\n        <div className=\"my-city--row my-city--row__name\">\n          <span>t&deg;</span>\n          <span>Country:</span>\n          <span>Today is:</span>\n          <span>Sunrise:</span>\n          <span>Sunset:</span>\n          <span>Humidity:</span>\n          <span>Wind:</span>\n          <span>Coordinates:</span>\n        </div>\n        <div className=\"my-city--row my-city--row__details\">\n          <span>{(main.temp - 273.15).toFixed(0)}&#8451;</span>\n          <span>{country}</span>\n          <span>{todayIs}</span>\n          <span>{sunRise}</span>\n          <span>{sunSet}</span>\n          <span>{main.humidity}%</span>\n          <span>\n            {getDirection(wind.deg)}\n            <br />\n            speed: {wind.speed} m/s\n          </span>\n\n          <span>\n            {coord.lat} {coord.lon}\n          </span>\n        </div>\n        <Button variant=\"dark\" className=\"mb-3 mt-3\">\n          Forecast for 5 days\n        </Button>\n        {canRemove ? (\n          <Button variant=\"danger\" onClick={removeFavorite}>\n            Remove from favorite\n          </Button>\n        ) : (\n          <Button onClick={addFavorite}>Add to favorite</Button>\n        )}\n      </div>\n    );\n  }\n  return <Spinner animation=\"grow\" />;\n});\n\nexport default MyCity;\n","import React, { useState, useEffect, memo, Fragment } from 'react';\nimport { Container, Row, Alert, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDefaultCity } from 'api/CityInfo';\nimport { addToFavorite } from '../redux/actions/LoadWeatherAction';\nimport ForecastCity from 'components/ForecastCity';\nimport SingleCity from 'components/SingleCity';\nimport MyCity from 'components/MyCity';\n\nconst CitiesContainer = memo(() => {\n  const [lng, setLng] = useState('');\n  const [lat, setLat] = useState('');\n  const [defaultCity, setDefaultCity] = useState(null);\n  const [isAdded, setIsAdded] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const myCity = useSelector((state) => state.defaultCity);\n  const isRequestInProgress = useSelector((state) => state.isRequestInProgress);\n  const error = useSelector((state) => state.error);\n  const searchedCity = useSelector((state) => state.searchedCity);\n  const cities = useSelector((state) => state.cities);\n\n  const displayLocationInfo = (position) => {\n    setLng(position.coords.longitude.toFixed(2));\n    setLat(position.coords.latitude.toFixed(2));\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(displayLocationInfo);\n  }, []);\n\n  useEffect(() => {\n    if (!isRequestInProgress && lat && lng && !defaultCity) {\n      dispatch(getDefaultCity(lat, lng));\n      setDefaultCity(myCity);\n    }\n  }, [defaultCity, dispatch, isRequestInProgress, lat, lng, myCity]);\n\n  const pushToArray = (city) => {\n    let arr = cities;\n    const index = arr.findIndex((e) => e.id === city.id);\n    if (index === -1) {\n      dispatch(addToFavorite(city));\n    } else {\n      arr[index] = city;\n      setIsAdded(true);\n      setTimeout(() => {\n        setIsAdded(false);\n      }, 4000);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Container fluid>\n        <Row>\n          {isAdded && <Alert variant=\"success\">This city has been already added to favorite!</Alert>}\n          {error && (\n            <Alert variant=\"danger\">\n              {error === 'Request failed with status code 401' && <span>Bad access key.</span>}\n              {error === 'Request failed with status code 404' && <span>Error, wrong city code using saved data.</span>}\n              {error === 'Request failed with status code 429' && (\n                <span>You are using free tariff, try again in one minute.</span>\n              )}\n            </Alert>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <MyCity />\n          </Col>\n        </Row>\n      </Container>\n\n      <Container>\n        <Row>\n          {Object.keys(searchedCity).length ? (\n            <Col>\n              <h2>Searched city</h2>\n              <SingleCity city={searchedCity} addToFavorite={pushToArray} />\n            </Col>\n          ) : null}\n        </Row>\n\n        {cities.length > 0 && (\n          <Row>\n            <Col md={12}>\n              <h2>Favorite cities</h2>\n            </Col>\n            {cities.map((city) => (\n              <Col md={4} key={city.id}>\n                <SingleCity city={city} />\n              </Col>\n            ))}\n          </Row>\n        )}\n\n        <Col md={12}>\n          <ForecastCity />\n        </Col>\n      </Container>\n    </Fragment>\n  );\n});\n\nexport default CitiesContainer;\n","import React, { Fragment } from 'react';\nimport NavMenu from 'components/NavMenu';\nimport CitiesContainer from 'pages/CitiesContainer';\n\nconst App = () => {\n  return (\n    <Fragment>\n      <NavMenu />\n      <CitiesContainer />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { actionTypes } from '../actions/LoadWeatherAction';\n\nconst defaultState = {\n  isRequestInProgress: false,\n  error: false,\n  defaultCity: null,\n  searchedCity: null,\n  cities: [],\n  forecast5city: null,\n};\n\nconst LoadWeatherReducer = (state = defaultState, { type = '', payload = {} }) => {\n  const { defaultCity, searchedCity, error, city, forecast5city } = payload;\n  switch (type) {\n    case actionTypes.GET_DEFAULT_CITY_COORDS_REQ_START:\n      return {\n        ...state,\n        error: '',\n        searchedCity: {},\n        isRequestInProgress: true,\n      };\n    case actionTypes.GET_DEFAULT_CITY_COORDS_REQ_SUCCESS:\n      return {\n        ...state,\n        defaultCity,\n        isRequestInProgress: false,\n      };\n    case actionTypes.GET_DEFAULT_CITY_COORDS_REQ_ERROR:\n      return {\n        ...state,\n        error,\n        isRequestInProgress: false,\n      };\n    case actionTypes.SEARCH_CITY_REQ_START:\n      return {\n        ...state,\n        error: '',\n        isRequestInProgress: true,\n      };\n    case actionTypes.SEARCH_CITY_REQ_SUCCESS:\n      return {\n        ...state,\n        searchedCity,\n        isRequestInProgress: false,\n      };\n    case actionTypes.SEARCH_CITY_REQ_ERROR:\n      return {\n        ...state,\n        error,\n        isRequestInProgress: false,\n      };\n    case actionTypes.ADD_TO_FAVORITE:\n      return {\n        ...state,\n        cities: [...state.cities, city],\n      };\n    case actionTypes.REMOVE_FROM_FAVORITE:\n      return {\n        ...state,\n        cities: state.cities.filter((c) => c.id !== city.id),\n      };\n    case actionTypes.FORECAST_FIVEDAYS_REQ_START:\n      return {\n        ...state,\n        error: '',\n        isRequestInProgress: true,\n      };\n    case actionTypes.FORECAST_FIVEDAYS_REQ_SUCCESS:\n      return {\n        ...state,\n        forecast5city,\n        isRequestInProgress: false,\n      };\n    case actionTypes.FORECAST_FIVEDAYS_REQ_ERROR:\n      return {\n        ...state,\n        error,\n        isRequestInProgress: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default LoadWeatherReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport citiesState from './reducers/LoadWeatherReducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, citiesState);\n\nexport let store = createStore(persistedReducer, composeEnhancer(applyMiddleware(thunk)));\nexport let persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}