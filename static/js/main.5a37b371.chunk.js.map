{"version":3,"sources":["modules/citiesModule/actions.js","modules/defaultCityModule/actions.js","modules/forecast5DaysModule/actions.js","api/Api.js","api/CityInfo.js","components/NavMenu.jsx","modules/forecast5DaysModule/selectors.js","components/ForecastCity.jsx","helpers/weatherImage.js","helpers/humanTime.js","components/SingleCity.jsx","components/defaultCity.jsx","pages/CitiesContainer.jsx","App.js","modules/citiesModule/reducer.js","modules/forecast5DaysModule/reducer.js","modules/defaultCityModule/reducer.js","redux/store.js","index.js"],"names":["actionTypes","addToFavorite","city","type","payload","removeFromFavorite","this","myValue","serverApi","client","axios","create","baseURL","params","APPID","getForecastCity","id","dispatch","a","Api","get","then","data","forecast5city","catch","message","error","NavMenu","memo","useState","searchCity","setSearchCity","useDispatch","search","useCallback","e","target","value","searchNewCity","name","preventDefault","searchedCity","Navbar","bg","variant","Brand","Form","inline","onSubmit","FormControl","placeholder","className","onChange","Button","weatherData","createSelector","state","forecastCity","list","items","map","item","dt_txt","temp","main","toFixed","ForecastCity","useSelector","isRequestInProgress","Spinner","animation","Col","md","ResponsiveContainer","width","aspect","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","activeDot","r","getWeatherImage","getHumanTime","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","SingleCity","props","canRemove","sys","country","sunrise","sunset","wind","coord","weather","dateSunRise","useMemo","Date","dateSunSet","todayIs","toLocaleDateString","sunRise","sunSet","removeFavorite","addFavorite","getForecast","src","icon","alt","style","textAlign","description","Table","striped","bordered","hover","humidity","deg","speed","lat","lon","onClick","DefaultCity","myCity","defaultCity","cities","savedCities","findIndex","el","getDirection","direction","CitiesContainer","lng","setLng","setLat","setDefaultCity","displayLocationInfo","position","coords","longitude","latitude","useEffect","navigator","geolocation","getCurrentPosition","getDefaultCity","Container","fluid","Row","Alert","length","App","defaultState","CitiesReducer","concat","filter","c","Forecast5DaysReducer","defaultCityReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5a37b371.chunk.js","sourcesContent":["export const actionTypes = {\n  SEARCH_CITY_REQ_START: 'SEARCH_CITY_REQ_START',\n  SEARCH_CITY_REQ_SUCCESS: 'SEARCH_CITY_REQ_SUCCESS',\n  SEARCH_CITY_REQ_ERROR: 'SEARCH_CITY_REQ_ERROR',\n  ADD_TO_FAVORITE: 'ADD_TO_FAVORITE',\n  REMOVE_FROM_FAVORITE: 'REMOVE_FROM_FAVORITE',\n};\n\nexport const requestSearchCity = () => ({\n  type: actionTypes.SEARCH_CITY_REQ_START,\n});\n\nexport const requestSearchCitySuccess = (searchedCity) => ({\n  type: actionTypes.SEARCH_CITY_REQ_SUCCESS,\n  payload: {\n    searchedCity,\n  },\n});\nexport const requestSearchCityError = (error) => ({\n  type: actionTypes.SEARCH_CITY_REQ_ERROR,\n  payload: {\n    error,\n  },\n});\nexport const addToFavorite = (city) => ({\n  type: actionTypes.ADD_TO_FAVORITE,\n  payload: {\n    city,\n  },\n});\nexport const removeFromFavorite = (city) => ({\n  type: actionTypes.REMOVE_FROM_FAVORITE,\n  payload: {\n    city,\n  },\n});\n","export const actionTypes = {\n  GET_DEFAULT_CITY_COORDS_REQ_START: 'GET_DEFAULT_CITY_COORDS_REQ_START',\n  GET_DEFAULT_CITY_COORDS_REQ_SUCCESS: 'GET_DEFAULT_CITY_COORDS_REQ_SUCCESS',\n  GET_DEFAULT_CITY_COORDS_REQ_ERROR: 'GET_DEFAULT_CITY_COORDS_REQ_ERROR',\n};\n\nexport const requestDefaultCity = () => ({\n  type: actionTypes.GET_DEFAULT_CITY_COORDS_REQ_START,\n});\n\nexport const requestDefaultCitySuccess = (defaultCity) => ({\n  type: actionTypes.GET_DEFAULT_CITY_COORDS_REQ_SUCCESS,\n  payload: {\n    defaultCity,\n  },\n});\nexport const requestDefaultCityError = (error) => ({\n  type: actionTypes.GET_DEFAULT_CITY_COORDS_REQ_ERROR,\n  payload: {\n    error,\n  },\n});\n","export const actionTypes = {\n  FORECAST_FIVEDAYS_REQ_START: 'FORECAST_FIVEDAYS_REQ_START',\n  FORECAST_FIVEDAYS_REQ_SUCCESS: 'FORECAST_FIVEDAYS_REQ_SUCCESS',\n  FORECAST_FIVEDAYS_REQ_ERROR: 'FORECAST_FIVEDAYS_REQ_ERROR',\n};\n\nexport const requestForecast5City = () => ({\n  type: actionTypes.FORECAST_FIVEDAYS_REQ_START,\n});\n\nexport const requestForecast5CitySuccess = (forecast5city) => ({\n  type: actionTypes.FORECAST_FIVEDAYS_REQ_SUCCESS,\n  payload: {\n    forecast5city,\n  },\n});\nexport const requestForecast5CityError = (error) => ({\n  type: actionTypes.FORECAST_FIVEDAYS_REQ_ERROR,\n  payload: {\n    error,\n  },\n});\n","import axios from 'axios';\n\nclass Api {\n  constructor() {\n    this.myValue = '3476f426c6d8f97027e143c1f5b3b21e';\n    this.serverApi = 'https://api.openweathermap.org/data/2.5';\n    this.client = axios.create({\n      baseURL: this.serverApi,\n      params: { APPID: this.myValue },\n    });\n  }\n}\n\nexport default new Api();\n","import { requestSearchCity, requestSearchCityError, requestSearchCitySuccess } from 'modules/citiesModule/actions';\nimport {\n  requestDefaultCity,\n  requestDefaultCityError,\n  requestDefaultCitySuccess,\n} from 'modules/defaultCityModule/actions';\nimport {\n  requestForecast5City,\n  requestForecast5CityError,\n  requestForecast5CitySuccess,\n} from 'modules/forecast5DaysModule/actions';\n\nimport Api from './Api';\n\nexport const getDefaultCity = (lat, lng) => async (dispatch) => {\n  dispatch(requestDefaultCity());\n  await Api.client\n    .get(`/weather?lat=${lat}&lon=${lng}`)\n    .then(({ data }) => {\n      dispatch(requestDefaultCitySuccess(data));\n    })\n    .catch(({ message }) => {\n      dispatch(requestDefaultCityError(message));\n    });\n};\n\nexport const getSearchedCity = (name) => async (dispatch) => {\n  dispatch(requestSearchCity());\n  await Api.client\n    .get(`/weather?q=${name}`)\n    .then(({ data }) => {\n      dispatch(requestSearchCitySuccess(data));\n    })\n    .catch(({ message }) => dispatch(requestSearchCityError(message)));\n};\n\nexport const getForecastCity = (id) => async (dispatch) => {\n  if (!id) return;\n  dispatch(requestForecast5City());\n  await Api.client\n    .get(`/forecast?id=${id}`)\n    .then(({ data }) => {\n      dispatch(requestForecast5CitySuccess(data));\n    })\n    .catch(({ message }) => dispatch(requestForecast5CityError(message)));\n};\n","import React, { memo, useCallback, useState } from 'react';\nimport { Button, Form, FormControl, Navbar } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { getSearchedCity } from 'api/CityInfo';\n\nconst NavMenu = memo(() => {\n  const [searchCity, setSearchCity] = useState('');\n  const dispatch = useDispatch();\n\n  const search = useCallback((e) => setSearchCity(e.target.value), []);\n\n  const searchNewCity = useCallback(\n    (e) => {\n      e.preventDefault();\n      dispatch(getSearchedCity(searchCity));\n      setSearchCity('');\n    },\n    [dispatch, searchCity]\n  );\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>My weather app</Navbar.Brand>\n      <Form inline onSubmit={searchNewCity}>\n        <FormControl\n          type=\"text\"\n          placeholder=\"Search city by name\"\n          className=\"mr-sm-2\"\n          onChange={search}\n          value={searchCity}\n        />\n        <Button type=\"submit\" variant=\"success\">\n          Search\n        </Button>\n      </Form>\n    </Navbar>\n  );\n});\n\nexport default NavMenu;\n","import { createSelector } from 'reselect';\n\nconst list = (state) => state.forecastCity?.forecast5city?.list || [];\n\nexport const weatherData = createSelector(list, (items) =>\n  items.map((item) => ({\n    name: item.dt_txt,\n    temp: (item.main.temp - 273.15).toFixed(0),\n  }))\n);\n","import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Spinner, Col } from 'react-bootstrap';\nimport { weatherData } from '../modules/forecast5DaysModule/selectors';\n\nconst ForecastCity = memo(() => {\n  const forecast5city = useSelector((state) => state.forecastCity.forecast5city);\n  const data = useSelector(weatherData);\n  const isRequestInProgress = useSelector((state) => state.forecastCity.isRequestInProgress);\n\n  if (isRequestInProgress) return <Spinner animation=\"grow\" />;\n\n  if (!forecast5city) return null;\n\n  return (\n    <Col md={12}>\n      <h2>Forecast for 5 day for city {forecast5city.city.name}</h2>\n      <ResponsiveContainer width=\"100%\" aspect={2.5} height=\"300px\">\n        <LineChart\n          width={1500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          {/* <Legend /> */}\n          <Line type=\"monotone\" dataKey=\"temp\" stroke=\"red\" activeDot={{ r: 5 }} />\n        </LineChart>\n      </ResponsiveContainer>\n    </Col>\n  );\n});\n\nexport default ForecastCity;\n","const getWeatherImage = (name) => `https://openweathermap.org/img/w/${name}.png`;\n\nexport default getWeatherImage;\n","const getHumanTime = (date) => {\n  const hours = date.getHours();\n  const minutes = '0' + date.getMinutes();\n  const seconds = '0' + date.getSeconds();\n  return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n};\n\nexport default getHumanTime;\n","import React, { Fragment, memo, useCallback, useMemo } from 'react';\nimport { Button, Spinner, Table } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport getWeatherImage from 'helpers/weatherImage';\nimport getHumanTime from 'helpers/humanTime';\nimport { addToFavorite, removeFromFavorite } from 'modules/citiesModule/actions';\nimport { getForecastCity } from 'api/CityInfo';\n\nconst SingleCity = memo((props) => {\n  const { city, canRemove } = props;\n\n  const dispatch = useDispatch();\n\n  const {\n    sys: { country, sunrise, sunset },\n    main,\n    wind,\n    coord,\n    id,\n    weather,\n    name,\n  } = city;\n\n  const dateSunRise = useMemo(() => new Date(sunrise * 1000), [sunrise]);\n  const dateSunSet = useMemo(() => new Date(sunset * 1000), [sunset]);\n  const todayIs = useMemo(() => new Date().toLocaleDateString(), []);\n  const sunRise = useMemo(() => getHumanTime(dateSunRise), [dateSunRise]);\n  const sunSet = useMemo(() => getHumanTime(dateSunSet), [dateSunSet]);\n\n  const removeFavorite = useCallback(() => dispatch(removeFromFavorite(city)), [dispatch, city]);\n  const addFavorite = useCallback(() => dispatch(addToFavorite(city)), [dispatch, city]);\n  const getForecast = useCallback(() => dispatch(getForecastCity(id)), [id, dispatch]);\n\n  if (city) {\n    return (\n      <div className=\"single\">\n        <h2>{name}</h2>\n        <img src={getWeatherImage(weather[0].icon)} alt=\"weather\" />\n        <p style={{ textAlign: 'center' }}>{weather[0].description}</p>\n        <Table striped bordered hover>\n          <tbody>\n            <tr>\n              <td>t&deg; </td>\n              <td>{(main.temp - 273.15).toFixed(0)}&#8451;</td>\n            </tr>\n            <tr>\n              <td>Country:</td>\n              <td>{country}</td>\n            </tr>\n            <tr>\n              <td>Today is:</td>\n              <td>{todayIs}</td>\n            </tr>\n            <tr>\n              <td>Sunrise:</td>\n              <td>{sunRise}</td>\n            </tr>\n            <tr>\n              <td>Sunset:</td>\n              <td>{sunSet}</td>\n            </tr>\n            <tr>\n              <td>Humidity:</td>\n              <td>{main.humidity}%</td>\n            </tr>\n            <tr>\n              <td>Wind:</td>\n              <td>\n                {wind.deg ? (\n                  <Fragment>\n                    direction:&nbsp;\n                    {wind.deg < 90 ? <span>North-East</span> : null}\n                    {wind.deg >= 90 && wind.deg < 180 ? <span>South-East</span> : null}\n                    {wind.deg >= 180 && wind.deg < 270 ? <span>South-West</span> : null}\n                    {wind.deg >= 270 && wind.deg < 360 ? <span>North-West</span> : null}, <br />\n                  </Fragment>\n                ) : null}\n                speed: {wind.speed} m/s\n              </td>\n            </tr>\n            <tr>\n              <td>Coordinates:</td>\n              <td>\n                {coord.lat} {coord.lon}\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n\n        <Button onClick={getForecast} variant=\"dark\" className=\"mb-3\">\n          Forecast for 5 days\n        </Button>\n\n        {canRemove ? (\n          <Button variant=\"danger\" onClick={removeFavorite} className=\"mb-3\">\n            Remove from favorite\n          </Button>\n        ) : (\n          <Button onClick={addFavorite} className=\"mb-3\">\n            Add to favorite\n          </Button>\n        )}\n      </div>\n    );\n  }\n  return <Spinner animation=\"grow\" />;\n});\n\nexport default SingleCity;\n","import React, { memo, useCallback, useMemo } from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport getWeatherImage from 'helpers/weatherImage';\nimport getHumanTime from 'helpers/humanTime';\nimport { addToFavorite, removeFromFavorite } from 'modules/citiesModule/actions';\nimport { getForecastCity } from 'api/CityInfo';\n\nconst DefaultCity = memo(() => {\n  const dispatch = useDispatch();\n\n  const myCity = useSelector((state) => state.defaultCity.defaultCity);\n  const cities = useSelector((state) => state.savedCities.cities);\n\n  const {\n    sys: { country, sunrise, sunset },\n    main,\n    wind,\n    coord,\n    weather,\n    name,\n    id,\n  } = myCity;\n\n  const dateSunRise = useMemo(() => new Date(sunrise * 1000), [sunrise]);\n  const dateSunSet = useMemo(() => new Date(sunset * 1000), [sunset]);\n  const todayIs = useMemo(() => new Date().toLocaleDateString(), []);\n\n  const sunRise = useMemo(() => getHumanTime(dateSunRise), [dateSunRise]);\n  const sunSet = useMemo(() => getHumanTime(dateSunSet), [dateSunSet]);\n\n  const removeFavorite = useCallback(() => dispatch(removeFromFavorite(myCity)), [dispatch, myCity]);\n\n  const canRemove = useMemo(() => cities.findIndex((el) => el.id === id) > 0, [cities, id]);\n  const getForecast = useCallback(() => dispatch(getForecastCity(id)), [id, dispatch]);\n\n  const addFavorite = useCallback(() => dispatch(addToFavorite(myCity)), [dispatch, myCity]);\n\n  const getDirection = useCallback((direction) => {\n    switch (true) {\n      case direction < 90:\n        return 'North-East';\n      case direction >= 90 && direction < 180:\n        return 'South-East';\n      case direction >= 180 && direction < 270:\n        return 'South-West';\n      case direction >= 270 && direction < 360:\n        return 'North-West';\n      default:\n        return 'Checking';\n    }\n  }, []);\n\n  if (!myCity) return <Spinner animation=\"grow\" />;\n\n  return (\n    <div className=\"my-city\">\n      <h2>Weather in your city: {name}</h2>\n      <img src={getWeatherImage(weather[0].icon)} alt=\"weather\" />\n      <p style={{ textAlign: 'center' }}>{weather[0].description}</p>\n      <div className=\"my-city--row my-city--row__name\">\n        <span>t&deg;</span>\n        <span>Country:</span>\n        <span>Today is:</span>\n        <span>Sunrise:</span>\n        <span>Sunset:</span>\n        <span>Humidity:</span>\n        <span>Wind:</span>\n        <span>Coordinates:</span>\n      </div>\n      <div className=\"my-city--row my-city--row__details\">\n        <span>{(main.temp - 273.15).toFixed(0)}&#8451;</span>\n        <span>{country}</span>\n        <span>{todayIs}</span>\n        <span>{sunRise}</span>\n        <span>{sunSet}</span>\n        <span>{main.humidity}%</span>\n        <span>\n          {getDirection(wind.deg)}\n          <br />\n          speed: {wind.speed} m/s\n        </span>\n\n        <span>\n          {coord.lat} {coord.lon}\n        </span>\n      </div>\n      <Button variant=\"dark\" className=\"mb-3 mt-3\" onClick={getForecast}>\n        Forecast for 5 days\n      </Button>\n      {canRemove ? (\n        <Button variant=\"danger\" onClick={removeFavorite}>\n          Remove from favorite\n        </Button>\n      ) : (\n        <Button onClick={addFavorite}>Add to favorite</Button>\n      )}\n    </div>\n  );\n});\n\nexport default DefaultCity;\n","import React, { useState, useEffect, memo, Fragment, useCallback } from 'react';\nimport { Container, Row, Alert, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDefaultCity } from 'api/CityInfo';\n\nimport ForecastCity from 'components/ForecastCity';\nimport SingleCity from 'components/SingleCity';\nimport DefaultCity from 'components/defaultCity';\n\nconst CitiesContainer = memo(() => {\n  const [lng, setLng] = useState('');\n  const [lat, setLat] = useState('');\n  const [defaultCity, setDefaultCity] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const myCity = useSelector((state) => state.defaultCity.defaultCity);\n  const error = useSelector((state) => state.savedCities.error);\n  const searchedCity = useSelector((state) => state.savedCities.searchedCity);\n  const cities = useSelector((state) => state.savedCities.cities);\n\n  const displayLocationInfo = useCallback((position) => {\n    setLng(position.coords.longitude.toFixed(2));\n    setLat(position.coords.latitude.toFixed(2));\n  }, []);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(displayLocationInfo);\n  }, [displayLocationInfo]);\n\n  useEffect(() => {\n    if (lat && lng && !defaultCity) {\n      dispatch(getDefaultCity(lat, lng));\n      setDefaultCity(myCity);\n    }\n  }, [defaultCity, dispatch, lat, lng, myCity]);\n\n  return (\n    <Fragment>\n      <Container fluid>\n        <Row>\n          {error && (\n            <Alert variant=\"danger\">\n              {error === 'Request failed with status code 401' && <span>Bad access key.</span>}\n              {error === 'Request failed with status code 404' && <span>Error, wrong city code using saved data.</span>}\n              {error === 'Request failed with status code 429' && (\n                <span>You are using free tariff, try again in one minute.</span>\n              )}\n            </Alert>\n          )}\n        </Row>\n        {myCity && (\n          <Row>\n            <Col>\n              <DefaultCity />\n            </Col>\n          </Row>\n        )}\n      </Container>\n\n      <Container>\n        <Row>\n          {searchedCity && (\n            <Col>\n              <h2>Searched city</h2>\n              <SingleCity city={searchedCity} />\n            </Col>\n          )}\n        </Row>\n\n        {cities.length > 0 && (\n          <Row>\n            <Col md={12}>\n              <h2>Favorite cities</h2>\n            </Col>\n            <div className=\"cities-list\">\n              {cities.map((city) => (\n                <Col md={4} key={city.id}>\n                  <SingleCity city={city} canRemove />\n                </Col>\n              ))}\n            </div>\n          </Row>\n        )}\n\n        <ForecastCity />\n      </Container>\n    </Fragment>\n  );\n});\n\nexport default CitiesContainer;\n","import React, { Fragment } from 'react';\nimport NavMenu from 'components/NavMenu';\nimport CitiesContainer from 'pages/CitiesContainer';\n\nconst App = () => {\n  return (\n    <Fragment>\n      <NavMenu />\n      <CitiesContainer />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { actionTypes } from './actions';\n\nconst defaultState = {\n  isRequestInProgress: false,\n  error: false,\n  cities: [],\n};\n\nconst CitiesReducer = (state = defaultState, { type = '', payload = {} }) => {\n  const { searchedCity, error, city } = payload;\n  switch (type) {\n    case actionTypes.SEARCH_CITY_REQ_START:\n      return {\n        ...state,\n        error: '',\n        isRequestInProgress: true,\n      };\n    case actionTypes.SEARCH_CITY_REQ_SUCCESS:\n      return {\n        ...state,\n        searchedCity,\n        isRequestInProgress: false,\n      };\n    case actionTypes.SEARCH_CITY_REQ_ERROR:\n      return {\n        ...state,\n        error,\n        isRequestInProgress: false,\n      };\n    case actionTypes.ADD_TO_FAVORITE:\n      return {\n        ...state,\n        cities: state.cities.findIndex((el) => el.id === city.id) > 0 ? state.cities : state.cities.concat(city),\n      };\n    case actionTypes.REMOVE_FROM_FAVORITE:\n      return {\n        ...state,\n        cities: state.cities.filter((c) => c.id !== city.id),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default CitiesReducer;\n","import { actionTypes } from './actions';\n\nconst defaultState = {\n  isRequestInProgress: false,\n  error: false,\n  forecast5city: null,\n};\n\nconst Forecast5DaysReducer = (state = defaultState, { type = '', payload = {} }) => {\n  const { error, forecast5city } = payload;\n  switch (type) {\n    case actionTypes.FORECAST_FIVEDAYS_REQ_START:\n      return {\n        ...state,\n        error: '',\n        isRequestInProgress: true,\n      };\n    case actionTypes.FORECAST_FIVEDAYS_REQ_SUCCESS:\n      return {\n        ...state,\n        forecast5city,\n        isRequestInProgress: false,\n      };\n    case actionTypes.FORECAST_FIVEDAYS_REQ_ERROR:\n      return {\n        ...state,\n        error,\n        isRequestInProgress: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default Forecast5DaysReducer;\n","import { actionTypes } from './actions';\n\nconst defaultState = {\n  isRequestInProgress: false,\n  error: false,\n  defaultCity: null,\n};\n\nconst defaultCityReducer = (state = defaultState, { type = '', payload = {} }) => {\n  const { defaultCity, error } = payload;\n  switch (type) {\n    case actionTypes.GET_DEFAULT_CITY_COORDS_REQ_START:\n      return {\n        ...state,\n        error: '',\n        searchedCity: null,\n        isRequestInProgress: true,\n      };\n    case actionTypes.GET_DEFAULT_CITY_COORDS_REQ_SUCCESS:\n      return {\n        ...state,\n        defaultCity,\n        isRequestInProgress: false,\n      };\n    case actionTypes.GET_DEFAULT_CITY_COORDS_REQ_ERROR:\n      return {\n        ...state,\n        error,\n        isRequestInProgress: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default defaultCityReducer;\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport CitiesReducer from 'modules/citiesModule/reducer';\nimport Forecast5DaysReducer from 'modules/forecast5DaysModule/reducer';\nimport defaultCityReducer from 'modules/defaultCityModule/reducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  savedCities: CitiesReducer,\n  defaultCity: defaultCityReducer,\n  forecastCity: Forecast5DaysReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer, composeEnhancer(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\nimport './index.scss';\n\nSentry.init({\n  dsn: 'https://703839e39c7f49f084d8de09a3514f1a@o961141.ingest.sentry.io/5909515',\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}